// Minified cause 2,1kb was too heavy. For a human-readable version, checkout the development branch.
const readline=require("readline"),fs=require("fs"),dir="./src/components",mkFolder=(e,o)=>{fs.mkdirSync(`${dir}/${e}/${o}`,{recursive:!0},e=>{if(e)throw e},console.log("Folder created"))},mkJsx=(e,o)=>{let s=`import './${o}.css'\n\nconst ${o} = () => {\n    return (\n        <></>\n    )\n}\n\nexport { ${o} }\n`;fs.writeFileSync(`${dir}/${e}/${o}/${o}.jsx`,s,e=>{if(e)throw e},console.log("Jsx created"))},mkCss=(e,o)=>{fs.writeFileSync(`${dir}/${e}/${o}/${o}.css`,".root {\n\n}",e=>{if(e)throw e},console.log("Css created"))},mkJs=(e,o)=>{const s=`export { ${o} } from './${o}.jsx'`;fs.writeFileSync(`${dir}/${e}/${o}/${o}.js`,s,e=>{if(e)throw e},console.log("Index created"))},rl=readline.createInterface({input:process.stdin,output:process.stdout});let name,path;rl.question("What's the component name? ",e=>{rl.question("Is it an atom (1), a molecule (2) or an organism (3)? ",o=>{let s=e.toLowerCase().charAt(0).toUpperCase()+e.toLowerCase().slice(1);name=s,1!=o&&"atom"!=o||(path="atoms"),2!=o&&"molecule"!=o||(path="molecules"),3!=o&&"organism"!=o||(path="organisms"),rl.close()})}),rl.on("close",()=>{console.log(`Creating component ${name}  in /src/components/${path}/${name}`),mkFolder(path,name),mkJsx(path,name),mkCss(path,name),mkJs(path,name),console.log("Thank you for using atomic maker!"),process.exit(0)}),module.exports=rl;